import { useEffect } from "react";
import { Navigate } from "react-router-dom";
import { useAuth } from "@/hooks/useAuth";
import { useUserRole } from "@/hooks/useUserRole";
import { toast } from "sonner";

interface ProtectedRouteProps {
  children: React.ReactNode;
  requireAdmin?: boolean;
}

export const ProtectedRoute = ({ children, requireAdmin = false }: ProtectedRouteProps) => {
  const { user, loading: authLoading } = useAuth();
  const { role, loading: roleLoading } = useUserRole(user?.id);

  // ğŸ”¹ Enquanto carrega autenticaÃ§Ã£o
  if (authLoading || (requireAdmin && roleLoading)) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-pulse text-lg">Carregando...</div>
      </div>
    );
  }

  // ğŸ”¹ Se nÃ£o estÃ¡ logado, bloqueia
  if (!user) {
    toast.error("VocÃª precisa fazer login para acessar esta pÃ¡gina.");
    return <Navigate to="/auth" replace />;
  }

  // ğŸ”¹ Se Ã© rota admin e nÃ£o Ã© admin, bloqueia
  if (requireAdmin && role !== "admin") {
    toast.error("Acesso negado. Apenas administradores podem acessar esta Ã¡rea.");
    return <Navigate to="/" replace />;
  }

  // ğŸ”¹ Caso contrÃ¡rio, libera acesso
  return <>{children}</>;
};
